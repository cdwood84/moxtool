# Generated by Django 5.1.6 on 2025-03-11 16:32

import django.db.models.deletion
import django.db.models.functions.text
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a dance music genre (e.g. Progressive House, Future Bass, etc.)', max_length=200, unique=True)),
            ],
            options={
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='genre_name_case_insensitive_unique', violation_error_message='Genre already exists (case insensiitive match)')],
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('beatport_track_id', models.BigIntegerField(help_text='Track ID from Beatport, found in the track URL, which can be used to populate metadata.', unique=True, verbose_name='BeatportTrack')),
                ('artist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='catalog.artist')),
                ('genre', models.ManyToManyField(help_text='Select a genre for this track', to='catalog.genre')),
            ],
        ),
        migrations.CreateModel(
            name='TrackInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this track and owner library', primary_key=True, serialize=False)),
                ('comments', models.TextField(help_text='Enter any notes you want to remember about this track', max_length=1000)),
                ('date_added', models.DateField(blank=True, null=True)),
                ('track', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='catalog.track')),
            ],
            options={
                'ordering': ['date_added'],
            },
        ),
    ]
